// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  /*
  * ---
  *   Routes module
  *   @name routes
  *   @api public
  */

  var Hapi, Types, apiHandler, pack, renderJSON, utils;

  pack = require('../package');

  utils = require('./utilities');

  Hapi = require('hapi');

  Types = require('hapi').types;

  apiHandler = function(request) {
    return utils.getMarkDownHTML(__dirname + '/../API.md', function(err, data) {
      return request.reply.view('swagger.html', {
        title: pack.name,
        markdown: data
      });
    });
  };

  renderJSON = function(request, error, result) {
    if (error) {
      return request.reply(new Hapi.error(500, error));
    } else {
      return request.reply(result).type('application/json; charset=utf-8');
    }
  };

  module.exports = [
    {
      method: 'GET',
      path: '/home',
      config: {
        auth: 'passport',
        handler: function(request) {
          return request.reply('ACCESS GRANTED<br/><br/>');
        }
      }
    }, {
      method: "GET",
      path: "/questions/",
      config: {
        auth: false,
        handler: function(request) {
          return renderJSON(request, null, {
            questions: [
              {
                Q: "Did you eat food?",
                Y: 1,
                N: 0
              }, {
                Q: "Was it mostly plants?",
                Y: 1,
                N: -1
              }, {
                Q: "Was it 'not too much'?",
                Y: -1,
                N: 1
              }
            ]
          });
        },
        description: 'Get questions',
        notes: 'Lists questions',
        tags: ['api', 'questions']
      }
    }, {
      method: 'GET',
      path: '/users/',
      config: {
        auth: 'passport',
        handler: function(request) {
          console.log('Route: /users/ #{request.user}');
          return renderJSON(request, null, request.user);
        },
        description: 'Get user',
        notes: 'Get user data',
        tags: ['api', 'user']
      }
    }, {
      method: 'GET',
      path: '/',
      config: {
        handler: apiHandler
      }
    }, {
      method: 'GET',
      path: '/api/{path*}',
      handler: {
        directory: {
          path: './public',
          listing: false,
          index: true
        }
      }
    }, {
      method: 'GET',
      path: '/test/{path*}',
      handler: {
        directory: {
          path: './test',
          listing: false,
          index: true
        }
      }
    }
  ];

}).call(this);
