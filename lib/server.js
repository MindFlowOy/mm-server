// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  /*
  * ---
  *   Server module
  *   @name server
  *   @api public
  */

  var Hapi, exports;

  Hapi = require('hapi');

  exports = module.exports = function(config) {
    var pluginConfigs, retVal, serverInst;
    retVal = {
      server: void 0,
      error: void 0
    };
    if (config.host && config.port && config.options && config.plugins) {
      serverInst = new Hapi.Server(config.host, config.port, config.options);
      pluginConfigs = config.plugins;
      if (pluginConfigs['travelogue-fork']) {
        pluginConfigs['travelogue-fork'] = config;
      }
      serverInst.pack.allow({
        ext: true
      }).require(pluginConfigs, function(err) {
        if (err) {
          return retVal.error = err || "Server module: Unexpected error! (hapi.pluginConfigs)";
        } else {
          return retVal.server = serverInst;
        }
      });
    } else {
      retVal.error = "Server module: Invalid configuration object";
    }
    return retVal;
  };

}).call(this);
