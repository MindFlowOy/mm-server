// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  /*
  * ---
  *   Server Main
  *   @name index
  *   @api public
  */

  var configs, hapiServer, pack, routes, server, swaggerOptions, utils;

  pack = require('../package');

  utils = require('./utilities');

  configs = require('./config');

  server = require('./server');

  routes = require('./routes');

  hapiServer = server(configs.server);

  if (!hapiServer.server || hapiServer.error) {
    throw hapiServer.server || '[ error ] Index: Unexpected error!';
  }

  hapiServer = hapiServer.server;

  configs.authentication.passport = hapiServer.plugins.travelogue.passport;

  hapiServer.pack.allow({
    ext: true
  }).require('mf-auth-api', configs.authentication, function(err) {
    if (err) {
      return console.error('[ error ] Index: plugin mf-auth-api load error: ', err);
    } else {
      return console.log('[ start ] mf-auth-api plugin loaded');
    }
  });

  if (utils.isDevelopment) {
    hapiServer.on('internalError', function(event) {
      console.error('[ error ] Index: Internal error!');
      return console.error(event);
    });
  }

  hapiServer.addRoutes(routes);

  hapiServer.start(function() {
    return console.log('server started ', hapiServer.info.uri);
  });

  swaggerOptions = {
    basePath: configs.server.url,
    constth: configs.server.url,
    apiVersion: pack.version
  };

  hapiServer.pack.allow({
    ext: true
  }).require('hapi-swagger', swaggerOptions, function(err) {
    if (err) {
      return console.error('[ error ] Index: plugin swagger load error: ', err);
    } else {
      return console.log('[ start ] swagger plugin loaded');
    }
  });

}).call(this);
